rev(seq(1,10,2))[2] = [3]
rev(seq(1,10,2))[2] = (3)
rev(seq(1,10,2))[2]
3->rev(seq(1,10,2))[2]
a=rev(seq(1,10,2))[2]
a
a=rev(seq(1,10,2))
a
a[2]=3
a
a[6]=2
a
a[c(1,4,5)]
a[1:3]
x==y
plot(sin(a))
x=1:100
plot(sin(x))
x
sin(x)
plot(sin())
sin(1)
sin(0.1)
sin(0.2)
x=seq(1,100,0.01)
plot(sin(x))
plot(sin(x)[1:10])
plot(sin(x)[1:20])
plot(sin(x[1:10]))
plot(sin(x[1:20]))
plot(sin(x[1:100]))
length(x)
plot(sin(x[1:1000]))
plot(cos(x[1:1000]))
plot(sin(x[1:1000]))
plt=plot(sin(x[1:1000]))
matrix(10,10,10)
matrix(1,10,10)
matrix(rnorm(),10,10)
matrix(rnorm(1:100),10,10)
?dim
m=matrix(rnorm(1:100),10,10)
dim(m)
dim(m)<-(5,20)
c(5,20)
[5,20]
{5,20}
([5,20])
5;20
5:20
dim(m)<-5;20
dim(m)<-c(5,20)
dim(m)
m
RN = runif(10)
RN
RN = runif(10,10,10)
RN
help(runif)
RN = runif(10,0,10)
RN
RN = matrix(runif(100,0,10),10,10)
RN
RN = matrix(runif(1000,0,10),10,10)
RN
help("factor")
a = [1:100]
a = 1:100
b = -ln(a)
b = -log(a)
plot(b)
a = 0.0000001:0.1:100
b = -log(a)
plot(b)
?plot
plot(b,"l")
plot(b,type="l")
plot(a,type="l")
head(a)
a[1:20]
?sequence
?c
100:1:100
0.1:1:100
0.1:2:100
a = seq(0.1,100,0.1)
b=-log(a)
plot(b,type="l")
c = c(-log(a), log(a))
plot(c,type="l")
clc
p = matrix(0 1 0;1 1 0;2 1 1)
?"matrix"
a = [0 1 0 1 1 0 2 1 1]
a = (0 1 0 1 1 0 2 1 1)
a = {0 1 0 1 1 0 2 1 1}
a = [0, 1, 0, 1, 1, 0, 2, 1, 1]
a <- [0, 1, 0, 1, 1, 0, 2, 1, 1]
a <- c(0, 1, 0, 1, 1, 0, 2, 1, 1)
a
p = matrix(a,3,3)
p
p = matrix(a'',3,3)
p = matrix(t(a),3,3)
p
p = matrix(c(0,1,2,1,1,1,0,0,1),3,3)
p
det_p = det(p)
inv_p = inv(p)
library("fBasics", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
inv_p = inv(p)
inv_p
p
w = c(1,0,0)
w
w = t(w)
w
w = t(w)
w
W = w %*% inv_p
w = t(w)
w
W = w %*% inv_p
inv_p
w = c(1,1,1)
W = w %*% inv_p
W
?solve
f <- 1000^x = 1728^x + 512^x
?var
x <- 0.5
f <- 1000^x = 1728^x + 512^x
f <- function() {1000^x = 1728^x + 512^x}
solve(f,x)
install.packages("rootSolve")
library("rootSolve", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
demo(Jacobandroots)
fun <- function(x) {1728^x + 512^x - 1000^x}
r <- uniroot.all(fun, c(0,1))
r
fun(r)
fun(0.5)
fun(0.3)
fun(0.2)
fun(0.1)
fun <- function(x) {0.5*(1728^x) + 0.5*(512^x) - 1000^x}
r <- uniroot.all(fun, c(0,1))
r
fun(r[2])
fun(r[1])
20000^(1/3)
u <- function(x){x^(1/3)}
x = (0.2)*(30000) + (0.4)*(6000) + (0.4)*(1000)
u(x)
x
5*.2
x = c(5,10,15)
p = c(.2, .5, .3)
x
p
sum(x*p)
y = log(x)
y
sum(y*p)
y
log(sum(x*p))
exp(2.286)
log(10000)
log(10000)*.4 + log(8000)*.6
exp(9.076)
exp(log(10000)*.4 + log(8000)*.6)
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
xlfile <- read.xlsx("/Users/Ben/Documents/DataScienceCoursera/getdata-data-DATA.gov_NGAP/xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
xlfile <- read.xlsx("/Users/Ben/Documents/DataScienceCoursera/getdata-data-DATA.gov_NGAP.xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
xlfile
dat <- read.xlsx("/Users/Ben/Documents/DataScienceCoursera/getdata-data-DATA.gov_NGAP.xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
library(XML)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
dat <- xmlTreeParse(fileURL, useInternal = TRUE)
fileURL <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
dat <- xmlTreeParse(fileURL, useInternal = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "/Users/Ben/Documents/DataScienceCoursera/", method = "curl")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "/Users/Ben/Documents/DataScienceCoursera/getdatarest.csv", method = "curl")
library("data.table", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
?fread
folderpath <- "/Users/Ben/Documents/DataScienceCoursera"
filename <- file.path(pathname, "getdatarest.csv")
filename <- file.path(folderpath, "getdatarest.csv")
filename
DT <- fread(filename)
head(DT)
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(DT[,mean(pwgtp15),by=SEX])
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
{rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]}
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
xmllink <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
DAT <- xmlTreeParse(xmllink, useInternalNodes = TRUE)
swirl()
library("swirl")
swirl()
rm(list=ls())
setwd("/Users/Ben/Documents/DataScienceCoursera")
wd <- getwd()
list.files()
install.packages("XML")
library(XML)
dat <- xmlTreeParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
?xmlTreeParse
dat <- xmlParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml")
dat <- xmlParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", isURL = TRUE)
xmlpath <- file.path(wd,"restaurants.xml")
xmlpath
dat <- xmlParse("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", isURL = FALSE)
dat <- xmlParse(xmlpath, isURL = FALSE)
dat
head(dat)
d <- xmlParse("http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", isURL = TRUE)
d
rootnode <- xmlRoot(dat)
rootnode
xmlname(rootnode)
xmlName(rootnode)
names(rootnode)
rootnode[[1]]
rootnode[[1]][[1]]
//<zipcode>
//zipcode
node[@zipcode]
rootnode
rootnode[[1]]
rootnode[[1]][[1]]
rootnode[[1]][[1:3]]
rootnode[[1]][1:3]
zipcodes <- xpathApply(dat, "//row[@zipcode]", xmlGetAttr, "zipcode")
zipcodes
zipcodes <- xpathSApply(dat, "//row/zipcode", xmlValue)
length(zipcodes)
sum(zipcode == "21231")
sum(zipcodes == "21231")
rm(list=ls())
install.packages("xlsx")
library(xlsx)
getwd
getwd()
dat <- fread("getdatarest.csv")
install.packages("Data.Table")
install.packages("data.table")
library(data.table)
dat <- fread("getdatarest.csv")
DT <- fread("getdatarest.csv")
head(DT)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
sapply(split(DT$pwgtp15,DT$SEX),mean)
DT[,mean(pwgtp15),by=SEX]
mean(DT$pwgtp15,by=DT$SEX)
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
installed.packages()
?require
rm(list=ls())
fread_mean_runtime
fread_mean_runtime()
source(fread_mean_runtime)
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
rm(list=ls())
fread_mean_runtime
fread_mean_runtime()
DT <- fread("getdatarest.csv")
require(data.table)
DT <- fread("getdatarest.csv")
M1 <- function(){sapply(split(DT$pwgtp15,DT$SEX),mean)}
M1
M1
M1 <- function(DT){sapply(split(DT$pwgtp15,DT$SEX),mean)}
M1
M1(DT)
M1(DT)
M2(DT)
M3(DT)
M4(DT)
M2 <- function(DT){DT[,mean(pwgtp15),by=SEX]}
M3 <- function(DT){tapply(DT$pwgtp15,DT$SEX,mean)}
M4 <- function(DT){mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)}
M1(DT)
M2(DT)
M3(DT)
M4(DT)
run <- 1000
Method1 <- replicate(run, system.time(M1))
Method2 <- replicate(run, system.time(M2))
Method3 <- replicate(run, system.time(M3))
Method4 <- replicate(run, system.time(M4))
rm(Method1, Method2, Method3)
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
Method1 <- replicate(run, system.time(M1(DT)))
View(Method1)
View(Method2)
View(Method3)
View(Method4)
Method1 <- replicate(run, system.time(M1(DT)))
?matrix
MMM <- matrix(0,4,3)
View(Method1)
Metod1$elapsed
View(Method1)
class(Method1)
Method1[elapsed,]
Method1["elapsed",]
Method1 <- data.table(Method1)
View(Method1)
Method2 <- data.table(Method2)
Method3 <- data.table(Method3)
Method4 <- data.table(Method4)
View(Method3)
head(Method3)
dim(Method3)
system.time(M1(DT))
Method1 <- replicate(run, system.time(M1(DT)))
View(Method1)
Method1 <- data.table(Method1)
setnames(Method1, c("1","2","3","4","5"), c("user.self","sys.self","elpased","user.child","sys.child"))
setnames(Method2, c("1","2","3","4","5"), c("user.self","sys.self","elpased","user.child","sys.child"))
setnames(Method3, c("1","2","3","4","5"), c("user.self","sys.self","elpased","user.child","sys.child"))
setnames(Method4, c("1","2","3","4","5"), c("user.self","sys.self","elpased","user.child","sys.child"))
setnames(Method1, c(1,2,3,4,5), c("user.self","sys.self","elpased","user.child","sys.child"))
View(Method1)
Method1 <- replicate(run, system.time(M1(DT)))
Method1 <- replicate(run, system.time(M1(DT)))
Method1 <- data.table(Method1)
min(Method1[3,])
max(Method1[3,])
mean(Method1[3,])
mean(as.numeric(Method1[3,]))
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
min(as.numeric(Method1[3,]))
mean(as.numeric(Method1[3,]))
max(as.numeric(Method1[3,]))
c(min(as.numeric(Method1[3,])), mean(as.numeric(Method1[3,])), max(as.numeric(Method1[3,])))
MMM[1,] <- c(min(as.numeric(Method1[3,])), mean(as.numeric(Method1[3,])), max(as.numeric(Method1[3,])))
MMM[1,] <- c(min(as.numeric(Method1[3,])), mean(as.numeric(Method1[3,])), max(as.numeric(Method1[3,])))
MMM[2,] <- c(min(as.numeric(Method2[3,])), mean(as.numeric(Method2[3,])), max(as.numeric(Method2[3,])))
MMM[3,] <- c(min(as.numeric(Method3[3,])), mean(as.numeric(Method3[3,])), max(as.numeric(Method3[3,])))
MMM[4,] <- c(min(as.numeric(Method4[3,])), mean(as.numeric(Method4[3,])), max(as.numeric(Method4[3,])))
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
View(MMM)
which(min(MMM[,2]))
which(MMM[,2] == min(MMM[,2]))
View(MMM)
Best <- which(MMM[,2] == min(MMM[,2]))
Best
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
# Calculate the cumulative average over all sequences
CumSum1 <- cumsum(as.numeric(Method1[3,])) / seq_along(as.numeric(Method1[3,]))
CumSum2 <- cumsum(as.numeric(Method2[3,])) / seq_along(as.numeric(Method2[3,]))
CumSum3 <- cumsum(as.numeric(Method3[3,])) / seq_along(as.numeric(Method3[3,]))
CumSum4 <- cumsum(as.numeric(Method4[3,])) / seq_along(as.numeric(Method4[3,]))
plot(CumSum1, CumSum2, CumSum3, CumSum4)
plot(CumSum1)
plot(CumSum2)
plot(CumSum3)
plot(CumSum4)
plot(CumSum2)
DT$pwgtp15
[DT$pwgtp15 DT$SEX]
c(DT$pwgtp15, DT$SEX)
source('~/Documents/DataScienceCoursera/fread_mean_runtime.R')
rm(list=ls())
install.package("httr")
install.packages("httr")
library(httr)
myapp <- oauth_app("github",
key = "8201589d318df6b4b309",
secret = "2e4d6f8549a811bdc2e6b512afea0d88ae663de0")
GH_Token <- oauth2.0_token(oauth_endpoints("github"), myapp)
rm(list=ls())
close()
install.packages("httpuv")
library(httpuv)
myapp <- oauth_app("github",
key = "8201589d318df6b4b309",
secret = "2e4d6f8549a811bdc2e6b512afea0d88ae663de0")
GH_Token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
gtoken <- config(token = GH_Token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
view(req)
str(req)
stop_for_status(req)
content(req)
?content
class(req)
rec <- content(req)
list(rec)
dim(rec)
length(rec)
?GET
rec[[4]]
class(rec[[4]])
dim(rec[[4]])
length(rec[[4]])
rec[[4]]$name
rec$name
for(i in 1:length(rec)){
if(rec[[i]] == "datasharing"){index = i}
}
for(i in 1:length(rec)){
if(rec[[i]]$name == "datasharing"){index = i}
}
print(rec[[index]]$created_at)
rec[[1:30]]
rec[[1]]
print(rec[[index]]$created_at)
rm(list=ls())
install.packages("sqldf")
library(sqldf)
?read.csv
dat <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
str(dat)
head(dat$pwgtp1)
tail(dat$pwgtp1)
class(dat$pwgtp1)
req <- sqldf("select pwgtp1 from acs where AGEP < 50")
?sqldf
res <- sqldf("select pwgtp1 from acs where AGEP < 50")
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
res <- sqldf("select pwgtp1 from acs where AGEP < 50")
if(unique(acs$AGEP) == sqldf("select distinct AGEP from acs")){ message("Option 1 TRUE"); else{message("Option 1 FALSE")}}
if(unique(acs$AGEP) == sqldf("select distinct AGEP from acs")){message("Option 1 TRUE")}; else{message("Option 1 FALSE")}
if(all(unique(acs$AGEP) == sqldf("select distinct AGEP from acs"))){message("Option 1 TRUE")}; else{message("Option 1 FALSE")}
if(all(unique(acs$AGEP) == sqldf("select distinct AGEP from acs"))){message("Option 1 TRUE")}else{message("Option 1 FALSE")}
if(all(unique(acs$AGEP) == sqldf("select distinct AGEP from acs"))){message("Option 1 TRUE")}else{message("Option 1 FALSE")}
if(all(unique(acs$AGEP) == sqldf("select AGEP where unique from acs"))){message("Option 1 TRUE")}else{message("Option 1 FALSE")}
if(all(unique(acs$AGEP) == sqldf("select unique * from acs"))){message("Option 1 TRUE")}else{message("Option 1 FALSE")}
if(all(unique(acs$AGEP) == sqldf("select distinct pwgtp1 from acs"))){message("Option 1 TRUE")}else{message("Option 1 FALSE")}
if(try(sqldf("select distinct AGEP from acs"))){
if(all(unique(acs$AGEP) == sqldf("select distinct AGEP from acs"))){message("Option 1 TRUE")}else{message("Option 1 FALSE")}
}
try(sqldf("select distinct AGEP from acs"))
try(sqldf("select AGEP where unique from acs"))
?sqldf
sqldf("select unique * from acs")
sqldf("select distinct pwgtp1 from acs")
all(unique(acs$AGEP) == sqldf("select distinct pwgtp1 from acs"))
con <- url(http://biostat.jhsph.edu/~jleek/contact.html)
html_code <- readLines(con)
con <- url(http://biostat.jhsph.edu/~jleek/contact.html)
con <- url("http://biostat.jhsph.edu/~jleek/contact.html")
html_code <- readLines(con)
str(html_code)
html_code[1,]
html_code[1]
html_code[10]
close(con)
print(nchar(html_code[10]))
# print number of characterson 10th line of html object
print(nchar(html_code[10]))
# print number of characterson 20th line of html object
print(nchar(html_code[20]))
# print number of characterson 30th line of html object
print(nchar(html_code[30]))
# print number of characterson 100th line of html object
print(nchar(html_code[100]))
f <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
?read.fwf
f <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", 8)
View(f)
f <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", c(9,8,8,8,8,8,8,8,8))
View(f)
f <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", c(10,4,4,4,4,4,4,4,4))
View(f)
f <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", skip=4,c(12,7,4,9,4,9,4,9,4))
View(f)
sum(f[,4])
print(sum(f[,4]))
# print number of characterson 10th line of html object
p1 <- print(nchar(html_code[10]))
# print number of characterson 20th line of html object
p2 <- print(nchar(html_code[20]))
# print number of characterson 30th line of html object
p3 <- print(nchar(html_code[30]))
# print number of characterson 100th line of html object
p4 <- print(nchar(html_code[100]))
# combine and print answer
print(c(p1,p2,p3,p4))
p1 <- print(nchar(html_code[10]))
# print number of characterson 10th line of html object
p1 <- nchar(html_code[10])
# print number of characterson 20th line of html object
p2 <- nchar(html_code[20])
# print number of characterson 30th line of html object
p3 <- nchar(html_code[30])
# print number of characterson 100th line of html object
p4 <- nchar(html_code[100])
# combine and print answer
print(c(p1,p2,p3,p4))
rm(list=ls())
rm(list <- ls())
rm(list=ls())
a <- 1111
rm(list <- ls())
